{"version":3,"sources":["../../src/koa/08.js"],"names":["Koa","require","app","logger","ctx","next","console","log","Date","now","request","method","url","use","listen"],"mappings":";;AAAA;AACA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,MAAM,IAAIF,GAAJ,EAAZ;;AAEA,IAAMG,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC5BC,UAAQC,GAAR,CAAeC,KAAKC,GAAL,EAAf,SAA6BL,IAAIM,OAAJ,CAAYC,MAAzC,SAAmDP,IAAIM,OAAJ,CAAYE,GAA/D;AACAP;AACD,CAHD;;AAKAH,IAAIW,GAAJ,CAAQV,MAAR;;AAEAD,IAAIY,MAAJ,CAAW,IAAX;;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA","file":"08.js","sourcesContent":["// 将Logger单独拆分成一个独立函数\r\nconst Koa = require('koa')\r\nconst app = new Koa()\r\n\r\nconst logger = (ctx, next) => {\r\n  console.log(`${Date.now()} ${ctx.request.method} ${ctx.request.url}`)\r\n  next()\r\n}\r\n\r\napp.use(logger)\r\n\r\napp.listen(3000)\r\n\r\n/* \r\n * a  像上面代码中的logger函数就叫作中间件middleware，因为它处在HTTP Request和HTTP Response中间\r\n * a  用来实现某种中间功能。 app.use()用来加载中间件  \r\n * a  基本上，Koa所有功能都是通过中间件实现的。每个中间件默认接受两个参数，\r\n * a  第一个是Context对象，第二个是next函数，只要调用next函数，就可以把执行权交给下一个中间件\r\n */\r\n\r\n// ? 蓝色的\r\n// ! 红色的\r\n// * 绿色的\r\n// // 删除线\r\n// TODO 橘黄色"]}