/**
 * 在通过策略模式重构代码，我们消除了原程序中大片的条件分支语句。
 * 所有跟计算奖金有关的逻辑不再放在Context中，而是分布在各个策略对象中。
 *
 * Context并没有计算奖金的能力，而是把这个职责委托给了某个策略对象。
 * 每个策略对象负责的算法已被各自封装在对象内部。
 * 当我们对这些策略对象发出“计算奖金”的请求时，它们会返回各自不同的计算结果，
 * 这正是对象多态性的体现，也是“它们可以相互替换”的目的。
 * 替换Context中当前保存的策略对象，便能执行不同的算法来得到我们想要的结果。
 */
