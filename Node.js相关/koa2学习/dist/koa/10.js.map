{"version":3,"sources":["../../src/koa/10.js"],"names":["Koa","require","fs","app","main","ctx","next","response","type","readFile","body","use","listen"],"mappings":";;;;;;;;;;;;AAAA;;;;;AAKA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,KAAKD,QAAQ,aAAR,CAAX;AACA,IAAME,MAAM,IAAIH,GAAJ,EAAZ;;AAEA,IAAMI;AAAA,sFAAO,iBAAeC,GAAf,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AACXD,gBAAIE,QAAJ,CAAaC,IAAb,GAAoB,MAApB;AADW;AAAA,mBAEeN,GAAGO,QAAH,CAAY,uBAAZ,EAAqC,MAArC,CAFf;;AAAA;AAEXJ,gBAAIE,QAAJ,CAAaG,IAFF;;AAGXJ;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAMAH,IAAIQ,GAAJ,CAAQP,IAAR;;AAEAD,IAAIS,MAAJ,CAAW,IAAX","file":"10.js","sourcesContent":["/**\r\n !c 异步中间件 \r\n ?c 迄今为止，所有例子的中间件都是同步的，不包含异步操作，那么我们来看看异步操作\r\n */\r\n\r\nconst Koa = require('koa')\r\nconst fs = require('fs.promised')\r\nconst app = new Koa()\r\n\r\nconst main = async function(ctx, next) {\r\n  ctx.response.type = 'html'\r\n  ctx.response.body = await fs.readFile('./demos/template.html', 'utf8')\r\n  next()\r\n}\r\n\r\napp.use(main)\r\n\r\napp.listen(3000)"]}